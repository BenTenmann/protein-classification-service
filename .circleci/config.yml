version: 2.1
orbs:
  codecov: codecov/codecov@3.2.2

executors:
  python-3-9:
    docker:
      - image: circleci/python:3.9
  node-docker:
    docker:
      - image: circleci/node:14.18

commands:
  build-and-push-docker:
    parameters:
      registry:
        type: string
        default: $DEFAULT_DOCKER_REGISTRY
      image:
        type: string
        default: $CIRCLE_REPO_NAME
    steps:
      - checkout
      - run:
          name: build docker image
          command: |
            docker build -t << parameters.image >> .
      - run:
          name: push image
          command: |
            TAG=${CIRCLE_TAG/deploy-/}
            
            IMAGE=<< parameters.registry >>/<< parameters.image >>:$TAG
            docker tag << parameters.image >> $IMAGE
            docker push $IMAGE

jobs:
  generate-version:
    executor: node-docker
    steps:
      - checkout
      - run:
          name: install yq
          command: |
            VERSION=${YQ_DEFAULT_VERSION:-v4.9.6}
            BINARY=${YQ_DEFAULT_BINARY:-yq_linux_386}
            sudo wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/bin/yq
            sudo chmod +x $_
      - run:
          name: install semantic release dependencies
          command: |
            npm --prefix .semantic-release run installInParent
      - run:
          name: run semantic release
          command: npx semantic-release

  module-test:
    executor: python-3-9
    steps:
      - checkout
      - restore_cache:
          keys:
            - python-cache-{{ checksum "requirements-dev.txt" }}
      - run:
          name: install dependencies
          command: |
            python -m pip install -r requirements-dev.txt --user
      - save_cache:
          paths:
            - ~/.cache/pip
          key: python-cache-{{ checksum "requirements-dev.txt" }}
          when: always
      - run:
          name: run unit tests
          command: |
            python -m pytest -v tests --cov=protein_classification --cov-report xml
      - codecov/upload:
          file: coverage.xml

  build-and-push-docker:
    executor: python-3-9
    steps:
      - build-and-push-docker

workflows:
  version: 2
  build-release:
    jobs:
      - generate-version:
          filters:
            branches:
              only: "main"
      - module-test:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: "main"
      - build-and-push-docker:
          requires:
            - generate-version
          filters:
            branches:
              only: "main"
